<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.ep.spring" />
	
	<beans:bean id="multipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	    <beans:property name="maxUploadSize" value="52428800" />
	    <beans:property name="maxInMemorySize" value="1000000" />
	    <beans:property name="defaultEncoding" value="UTF-8" />
	</beans:bean>
	
	<!-- 스케줄링 관련 구문 추가 -->
	<task:scheduler id="myScheduler" pool-size="10"/>
	<task:annotation-driven scheduler="myScheduler"/>
	
	<interceptors>
		<interceptor>
			<mapping path="/commute.ep"/>
			<mapping path="/list.ma"/>
			<mapping path="/main.ap"/>
			<mapping path="/main.sc"/>
			<mapping path="/main.re"/>
			<mapping path="/list.db"/>
			<mapping path="/list.bo"/>
			<mapping path="/favorite.add"/>
			<mapping path="/list.org"/>
			<mapping path="/myPage.ep"/>
			
			<beans:bean class="com.ep.spring.common.interceptor.LoginInterceptor" id="loginInterceptor"/>
		</interceptor>
	</interceptors>
	
	<!-- 웹소켓 빈 등록 -->
	<!-- websocket 관련 구문 추가 -->
	<beans:bean id="alarmEchoHandler" class="com.ep.spring.alarm.controller.AlarmEchoHandler"/>
	<websocket:handlers>
		<websocket:mapping handler="alarmEchoHandler" path="/alarm" /> <!-- /spring/chat url요청시 -->
		<!-- HttpSession 데이터를 사용할 수 있도록 설정 -->
		<websocket:handshake-interceptors>
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
		</websocket:handshake-interceptors>
		<websocket:sockjs websocket-enabled="true" />
	</websocket:handlers>
	
	<!-- chatEchoHandler -->
	<beans:bean id="chatEchoHandler" class="com.ep.spring.chat.controller.ChatEchoHandler"/>
	<websocket:handlers>
		<websocket:mapping handler="chatEchoHandler" path="/chat" /> <!-- /spring/chat url요청시 -->
		<!-- HttpSession 데이터를 사용할 수 있도록 설정 -->
		<websocket:handshake-interceptors> <!-- websocket세션객체 내에서 httpsession객체의 정보도 같이 사용하고자 할때 써야함(로그인한 회원의 정보가 필요) -->
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
		</websocket:handshake-interceptors>
		<websocket:sockjs/>
	</websocket:handlers>
	

</beans:beans>
