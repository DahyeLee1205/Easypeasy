<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
"-//mybatis.org//DTD Mapper 3.0//EN" 
"mybatis-3-mapper.dtd" >
<mapper namespace="organizationMapper">

	<resultMap id="employeeResult" type="Employee">
		<id column="emp_no" property="empNo" />
		<result column="emp_name" property="empName" />
		<result column="emp_id" property="empId" />
		<result column="email" property="email" />
		<result column="phone" property="phone" />
		<result column="dept_code" property="deptCode" />
		<result column="dept_name" property="deptName" />
		<result column="job_name" property="jobName" />
		<result column="job_code" property="jobCode" />
		<result column="hire_date" property="hireDate" />
		<result column="ent_yn" property="entYn" />
		<result column="ent_date" property="entDate" />
	</resultMap>
	
	<resultMap id="departmentResult" type="Department">
		<id column="dept_code" property="deptCode" />
		<result column="dept_name" property="deptName" />
	</resultMap>
	
	<resultMap id="jobResult" type="Job">
		<id column="job_code" property="jobCode" />
		<result column="job_name" property="jobName" />
	</resultMap>
	
	
	<select id="selectJob" resultMap="jobResult">
		select 
		       job_code
		     , job_name
		  from job
	</select>
	
	<select id="selectDept" resultMap="departmentResult">
		select 
			   dept_code
			 , dept_name
		  from department
	</select>
	
	
	<select id="selectOrgList" resultMap="employeeResult">
		select
			   emp_no
			 , emp_name
			 , emp_id
			 , email
			 , phone
			 , e.dept_code
			 , dept_name
			 , e.job_code
			 , job_name
		  from employee e
		  join department d on (e.dept_code = d.dept_code)
          join job j on (e.job_code = j.job_code)
         where ent_yn = 'N'
	</select>
	
	<select id="selectListCount" resultType="_int">
		select 
		       count(*)
		  from employee
		 where ent_yn = 'N'
	</select>
	
	<select id="selectList" resultMap="employeeResult">
		select
			   emp_no
			 , emp_name
			 , emp_id
			 , email
			 , phone
			 , dept_name
			 , job_name
			 , ent_yn
		  from employee e
		  join department d on (e.dept_code = d.dept_code)
          join job j on (e.job_code = j.job_code)
		 order
	        by emp_no desc
	</select>
	
	<insert id="insertMember">
		insert
		  into employee
		  (
		    emp_no
		  ,	emp_id
		  , emp_pwd
		  , emp_name
		  , job_code
		  , dept_code
		  , hire_date
		  , phone
		  , email
		  , address
		  )
		  values
		  (
		    seq_empNo.nextval
		  , #{empId}
		  , #{empPwd}
		  , #{empName}
		  , #{jobCode} 
		  , #{deptCode}
		  , #{hireDate}
		  , #{phone}
		  , #{email}
		  , #{address}
		  )
	</insert>
	
	<select id="noCheck" resultType="_int">
		select
		       count(*)
		  from employee
		 where emp_no = #{checkNo}
	</select>
	
	<select id="selectDetailForm" resultMap="employeeResult">
		select
			   emp_no
			 , emp_id
			 , emp_name
			 , job_name
			 , dept_name
			 , to_char(hire_date, 'YYYY-MM-DD') as "hire_date"
			 , email
			 , ent_yn
			 , to_char(ent_date, 'YYYY-MM-DD') as "ent_date"
		  from employee e 
		  left join department d on (e.dept_code = d.dept_code)
          left join job j on (e.job_code = j.job_code)
		 where e.emp_no = #{no}
	</select>
	
	<update id="updateMember">
		update 
		       employee
		   set emp_id = #{empId}
		     , emp_name = #{empName}
		     , job_code = #{jobCode}
		     , dept_code = #{deptCode}
		     , hire_date = #{hireDate}
		     , email = #{email}
		     , ent_yn = #{entYn}
		     , ent_date = #{entDate}
		 where emp_no = #{empNo}
	</update>
	
	<delete id="deleteMember">
		delete 
		  from employee
		 where ent_yn ='Y' 
	</delete>
	
<!-- 	<select id="selectSettingForm" resultMap="employeeResult">
		select
			   dept_name
			 , dept_code
			 , job_name
			 , job_code
		  from employee e
		  join department d on (e.dept_code = d.dept_code)
          join job j on (e.job_code = j.job_code)
	</select>
	 -->
	
</mapper>